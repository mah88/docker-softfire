####################################
###########  Messaging #############
####################################

[messaging]
bind_port = 5090

####################################
############  system ###############
####################################

[system]
server_threads = 3
experiment_manager_ip = exman
experiment_manager_port = 5051
name = monitoring-manager
description = monitoring-manager
ip = monman

[openstack-env]
OS_USERNAME=admin
OS_PASSWORD=zxxx
OS_AUTH_URL=xxx
OS_IDENTITY_API_VERSION=2
OS_TENANT_NAME=Zabbix_Test

[openstack-params]
image_name=Ubuntu-16.04
flavour=m1.small
security_group=default
instance_name=Zabbix_Server_Instance
network=private

[openstack-credentials]
credentials_file = /etc/softfire/openstack-credentials.json

####################################
############  Logging ##############
####################################

[loggers]
keys = root,main,stevedore,nova,keystone

[handlers]
keys = consoleHandler,logfile

[formatters]
keys = simpleFormatter,logfileformatter

[logger_main]
level = INFO
qualname = eu.softfire
handlers = consoleHandler,logfile
propagate = 0

[logger_stevedore]
level = WARN
qualname = stevedore
handlers = consoleHandler,logfile
propagate = 0

[logger_keystone]
level = INFO
qualname = keystoneauth
handlers = consoleHandler,logfile
propagate = 0

[logger_nova]
level = INFO
qualname = novaclient
handlers = consoleHandler,logfile
propagate = 0

[logger_root]
level = INFO
handlers = consoleHandler,logfile

[handler_consoleHandler]
class = StreamHandler
level = INFO
formatter = simpleFormatter
args = (sys.stdout,)

[formatter_logfileformatter]
#format=%(asctime)s %(name)-12s: %(levelname)s %(message)s
format = %(levelname)s: %(name)s:%(lineno)-20d:  %(message)s

[handler_logfile]
class = handlers.RotatingFileHandler
level = INFO
args = ('/var/log/softfire/experiment-manager.log', 'a', 2000, 100)
formatter = logfileformatter

[formatter_simpleFormatter]
format = %(levelname)s: %(name)s:%(lineno)-20d:  %(message)s

#[local-files]
#path = /etc/softfire/monitoring-manager
